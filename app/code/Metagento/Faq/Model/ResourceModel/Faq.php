<?php

namespace Metagento\Faq\Model\ResourceModel;


class Faq extends
    \Magento\Framework\Model\ResourceModel\Db\AbstractDb
{
    /**
     * @param \Magento\Framework\Model\ResourceModel\Db\Context $context
     * @param \Magento\Framework\Stdlib\DateTime $dateTime
     * @param null $resourcePrefix
     */
    public function __construct(
        \Magento\Framework\Model\ResourceModel\Db\Context $context,
        \Magento\Framework\Stdlib\DateTime $dateTime,
        \Magento\UrlRewrite\Model\ResourceModel\UrlRewriteCollectionFactory $urlRewriteCollectionFactory,
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Metagento\Faq\Model\CategoryFactory $categoryFactory,
        \Metagento\Faq\Model\FaqFactory $faqFactory,
        $resourcePrefix = null
    ) {
        parent::__construct($context, $resourcePrefix);
        $this->_dateTime                    = $dateTime;
        $this->_urlRewriteCollectionFactory = $urlRewriteCollectionFactory;
        $this->_categoryFactory             = $categoryFactory;
        $this->_faqFactory                  = $faqFactory;
        $this->_storeManager                = $storeManager;
    }

    protected function _construct()
    {
        $this->_init('metagento_faq', 'faq_id');
    }

    /**
     * @param \Magento\Framework\Model\AbstractModel $object
     * @return $this
     */
    protected function _beforeSave( \Magento\Framework\Model\AbstractModel $object )
    {
        if ( $object->isObjectNew() ) {
            $object->setData('created_time', $this->_dateTime->formatDate(true));
        }
        $object->setData('updated_time', $this->_dateTime->formatDate(true));
        return parent::_beforeSave($object);
    }

    public function saveUrlKey( \Metagento\Faq\Model\Faq $faq )
    {
        $id       = $faq->getId();
        $storeIds = $faq->getRealStoreIds();
        $urlKey   = strtolower(str_replace(' ', '-', $faq->getData('url_key')));
        foreach ( $storeIds as $storeId ) {
            $urlRewrite = $this->_urlRewriteCollectionFactory->create()
                                                             ->addFieldToFilter('entity_type', 'faq')
                                                             ->addFieldToFilter('entity_id', $id)
                                                             ->addFieldToFilter('store_id', $storeId)
                                                             ->getFirstItem();
            $urlRewrite->setData('entity_type', 'faq');
            $urlRewrite->setData('entity_id', $id);
            $urlRewrite->setData('request_path', $urlKey);
            $urlRewrite->setData('target_path', 'faq/faq/index/id/' . $id);
            $urlRewrite->setData('store_id', $storeId);
            $urlRewrite->setData('is_autogenerated', 0);
            try {
                $urlRewrite->save();
                $this->save($faq->setData('url_key', $urlKey));
            } catch ( \Exception $e ) {
                $faq->setData('url_key', $urlKey . '-' . $id);
                $this->saveUrlKey($faq);
            }
        }
    }

    /**
     * @param \Magento\Framework\Model\AbstractModel $faq
     * @return $this
     */
    public function deleteAllUrlKey( \Magento\Framework\Model\AbstractModel $faq )
    {
        $id = $faq->getId();
        /** @var \Magento\UrlRewrite\Model\ResourceModel\UrlRewriteCollection $urlRewrite */
        $urlRewrite = $this->_urlRewriteCollectionFactory->create();
        $urlRewrite->addFieldToFilter('entity_type', 'faq')
                   ->addFieldToFilter('entity_id', $id);
        foreach ( $urlRewrite as $item ) {
            $item->delete();
        }
        return $this;
    }

}